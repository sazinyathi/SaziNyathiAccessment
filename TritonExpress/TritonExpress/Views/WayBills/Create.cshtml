@model TritonExpress.ViewModels.WayBillsFormViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h4>Create a WayBills</h4>
<hr />
@if (ViewBag.Error != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>@ViewBag.Error</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Weight" class="control-label"></label>
                <input asp-for="Weight" class="form-control" />
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Status)
                @Html.DropDownListFor(m => m.Status, new SelectList(Model.Statuses, "Id", "Name"), new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Vehicle)
                @Html.DropDownListFor(m => m.Vehicle, new SelectList(Model.Vehicles, "Id", "Name"), new { @class = "form-control" })
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

